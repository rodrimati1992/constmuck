name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 2
      matrix:
        rust: [1.65.0, stable, beta, nightly]

    steps:
    - uses: actions/checkout@v2
    - name: ci-all-versions
      run: |
        rustup override set ${{ matrix.rust }}
        cargo update
          
        cd "${{github.workspace}}/"

        cargo build 
        cargo build --features "debug_checks"
        cargo build --features "derive"
        cargo test
        cargo test --features "debug_checks"
        cargo test --features "derive"

    - uses: actions/checkout@v2
    - name: ci-nighly
      if: ${{ matrix.rust == 'nightly' && runner.os == 'Linux' }}
      run: |
        rustup override set ${{ matrix.rust }}

        # ui tests are too noisy for CI, sadly
        # cargo test --features "derive __ui_tests debug_checks"
        cargo test --features "derive debug_checks"

        MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
        echo "Installing latest nightly with Miri"
        echo "$MIRI_NIGHTLY"
        rustup set profile minimal
        rustup default "$MIRI_NIGHTLY"
        rustup override set "$MIRI_NIGHTLY"
        rustup component add miri
        cargo miri setup

        cargo clean 

        cargo miri test --features="derive debug_checks"

        MIRIFLAGS="-Zmiri-disable-isolation -Zmiri-track-raw-pointers" \
            cargo miri test --features="derive debug_checks"
