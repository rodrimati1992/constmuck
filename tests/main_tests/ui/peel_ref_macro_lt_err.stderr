error: lifetime may not live long enough
 --> tests/main_tests/ui/peel_ref_macro_lt_err.rs:5:5
  |
4 | const fn foo<'a>(reff: &'a Wrapping<u8>) -> &'static u8 {
  |              -- lifetime `'a` defined here
5 |     peel_ref!(reff)
  |     ^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`
  |
  = note: this error originates in the macro `$crate::wrapper_inner` which comes from the expansion of the macro `peel_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error: lifetime may not live long enough
 --> tests/main_tests/ui/peel_ref_macro_lt_err.rs:9:5
  |
8 | const fn bar<'a>(reff: &'a Wrapping<u8>) -> &'static u8 {
  |              -- lifetime `'a` defined here
9 |     peel_ref!(reff, Wrapping<u8>)
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`
  |
  = note: this error originates in the macro `$crate::wrapper_inner` which comes from the expansion of the macro `peel_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error: lifetime may not live long enough
  --> tests/main_tests/ui/peel_ref_macro_lt_err.rs:13:5
   |
12 | const fn baz<'a>(reff: &'a Wrapping<u8>) -> &'static u8 {
   |              -- lifetime `'a` defined here
13 |     peel_ref!(reff, _, u8)
   |     ^^^^^^^^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`
   |
   = note: this error originates in the macro `$crate::wrapper_inner` which comes from the expansion of the macro `peel_ref` (in Nightly builds, run with -Z macro-backtrace for more info)

error: lifetime may not live long enough
  --> tests/main_tests/ui/peel_ref_macro_lt_err.rs:17:5
   |
16 | const fn qux<'a>(reff: &'a Wrapping<&'a u8>) -> &'a &'static u8 {
   |              -- lifetime `'a` defined here
17 |     peel_ref!(reff)
   |     ^^^^^^^^^^^^^^^ returning this value requires that `'a` must outlive `'static`
   |
   = note: this error originates in the macro `$crate::wrapper_inner` which comes from the expansion of the macro `peel_ref` (in Nightly builds, run with -Z macro-backtrace for more info)
